{"version":3,"sources":["../node_modules/@highcharts/map-collection/countries lazy /^/.*/-all/.geo/.json$/ groupOptions: {} namespace object","components/CountrySelector/index.js","components/Charts/LineChart/index.js","components/Charts/HighMaps/index.js","components/Summary/index.js","components/apis/index.js","components/Highlight/HighlightCard.js","components/Highlight/index.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","CountrySelector","countries","handleOnChange","value","classes","FormControl","className","InputLabel","shrink","htmlFor","NativeSelect","onChange","inputProps","name","Country","ISO2","toLowerCase","FormHelperText","defaultProps","LineChart","data","type","setType","nameChart","titleTooltip","useState","options","setOptions","reportType","setReportType","typeColor","red","green","grey","useEffect","customData","slice","Math","max","length","color","categories","item","moment","Date","format","chart","height","title","text","xAxis","crosshair","colors","yAxis","min","labels","align","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","series","generateOptions","ButtonGroup","style","display","justifyContent","marginBottom","size","aria-label","Button","onClick","border","fontWeight","highcharts","Highcharts","highchartsMap","initOptions","colorMap","mapNavigation","enabled","colorAxis","stops","legend","layout","verticalAlign","joinBy","HighMaps","mapData","mapLoaded","setMapLoaded","chartRef","useRef","fakeData","features","feature","index","key","properties","current","update","cloneDeep","constructorType","ref","Summary","countryId","report","setMapData","getMapDataByCountryId","res","catch","err","console","log","listData","Confirmed","Deaths","marginTop","Grid","container","sm","xs","wrapper","props","borderLeft","fontSize","count","HighlightCard","Card","CardContent","Typography","variant","component","end","separator","duration","Highlight","summary","locale","App","React","setCountries","selectedCountryId","setSelectedCountryId","setReport","axios","get","sortBy","useCallback","target","selectedCountry","find","country","toUpperCase","slug","Slug","utc","pop","useMemo","latestData","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8EAAA,IAAIA,EAAM,CACT,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0B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","file":"static/js/main.24be5be6.chunk.js","sourcesContent":["var map = {\n\t\"./ad/ad-all.geo.json\": [\n\t\t93,\n\t\t3\n\t],\n\t\"./ae/ae-all.geo.json\": [\n\t\t94,\n\t\t4\n\t],\n\t\"./af/af-all.geo.json\": [\n\t\t95,\n\t\t5\n\t],\n\t\"./ag/ag-all.geo.json\": [\n\t\t96,\n\t\t6\n\t],\n\t\"./al/al-all.geo.json\": [\n\t\t97,\n\t\t7\n\t],\n\t\"./am/am-all.geo.json\": [\n\t\t98,\n\t\t8\n\t],\n\t\"./ao/ao-all.geo.json\": [\n\t\t99,\n\t\t9\n\t],\n\t\"./ar/ar-all.geo.json\": [\n\t\t100,\n\t\t10\n\t],\n\t\"./as/as-all.geo.json\": [\n\t\t101,\n\t\t11\n\t],\n\t\"./at/at-all.geo.json\": [\n\t\t102,\n\t\t12\n\t],\n\t\"./au/au-all.geo.json\": [\n\t\t103,\n\t\t13\n\t],\n\t\"./az/az-all.geo.json\": [\n\t\t104,\n\t\t14\n\t],\n\t\"./ba/ba-all.geo.json\": [\n\t\t105,\n\t\t15\n\t],\n\t\"./bb/bb-all.geo.json\": [\n\t\t106,\n\t\t16\n\t],\n\t\"./bd/bd-all.geo.json\": [\n\t\t107,\n\t\t17\n\t],\n\t\"./be/be-all.geo.json\": [\n\t\t108,\n\t\t18\n\t],\n\t\"./bf/bf-all.geo.json\": [\n\t\t109,\n\t\t19\n\t],\n\t\"./bg/bg-all.geo.json\": [\n\t\t110,\n\t\t20\n\t],\n\t\"./bh/bh-all.geo.json\": [\n\t\t111,\n\t\t21\n\t],\n\t\"./bi/bi-all-all.geo.json\": [\n\t\t112,\n\t\t22\n\t],\n\t\"./bi/bi-all.geo.json\": [\n\t\t113,\n\t\t23\n\t],\n\t\"./bj/bj-all.geo.json\": [\n\t\t114,\n\t\t24\n\t],\n\t\"./bn/bn-all.geo.json\": [\n\t\t115,\n\t\t25\n\t],\n\t\"./bo/bo-all.geo.json\": [\n\t\t116,\n\t\t26\n\t],\n\t\"./br/br-all.geo.json\": [\n\t\t117,\n\t\t27\n\t],\n\t\"./bs/bs-all.geo.json\": [\n\t\t118,\n\t\t28\n\t],\n\t\"./bt/bt-all.geo.json\": [\n\t\t119,\n\t\t29\n\t],\n\t\"./bw/bw-all.geo.json\": [\n\t\t120,\n\t\t30\n\t],\n\t\"./by/by-all.geo.json\": [\n\t\t121,\n\t\t31\n\t],\n\t\"./bz/bz-all.geo.json\": [\n\t\t122,\n\t\t32\n\t],\n\t\"./ca/ca-ab-all.geo.json\": [\n\t\t123,\n\t\t33\n\t],\n\t\"./ca/ca-all-all.geo.json\": [\n\t\t124,\n\t\t34\n\t],\n\t\"./ca/ca-all.geo.json\": [\n\t\t125,\n\t\t35\n\t],\n\t\"./ca/ca-bc-all.geo.json\": [\n\t\t126,\n\t\t36\n\t],\n\t\"./ca/ca-mb-all.geo.json\": [\n\t\t127,\n\t\t37\n\t],\n\t\"./ca/ca-nb-all.geo.json\": [\n\t\t128,\n\t\t38\n\t],\n\t\"./ca/ca-nf-all.geo.json\": [\n\t\t129,\n\t\t39\n\t],\n\t\"./ca/ca-ns-all.geo.json\": [\n\t\t130,\n\t\t40\n\t],\n\t\"./ca/ca-nt-all.geo.json\": [\n\t\t131,\n\t\t41\n\t],\n\t\"./ca/ca-nu-all.geo.json\": [\n\t\t132,\n\t\t42\n\t],\n\t\"./ca/ca-on-all.geo.json\": [\n\t\t133,\n\t\t43\n\t],\n\t\"./ca/ca-pe-all.geo.json\": [\n\t\t134,\n\t\t44\n\t],\n\t\"./ca/ca-qc-all.geo.json\": [\n\t\t135,\n\t\t45\n\t],\n\t\"./ca/ca-sk-all.geo.json\": [\n\t\t136,\n\t\t46\n\t],\n\t\"./ca/ca-yt-all.geo.json\": [\n\t\t137,\n\t\t47\n\t],\n\t\"./cd/cd-all.geo.json\": [\n\t\t138,\n\t\t48\n\t],\n\t\"./cf/cf-all.geo.json\": [\n\t\t139,\n\t\t49\n\t],\n\t\"./cg/cg-all.geo.json\": [\n\t\t140,\n\t\t50\n\t],\n\t\"./ch/ch-all.geo.json\": [\n\t\t141,\n\t\t51\n\t],\n\t\"./ci/ci-all.geo.json\": [\n\t\t142,\n\t\t52\n\t],\n\t\"./ck/ck-all.geo.json\": [\n\t\t143,\n\t\t53\n\t],\n\t\"./cl/cl-all.geo.json\": [\n\t\t144,\n\t\t54\n\t],\n\t\"./cm/cm-all.geo.json\": [\n\t\t145,\n\t\t55\n\t],\n\t\"./cn/cn-all.geo.json\": [\n\t\t146,\n\t\t56\n\t],\n\t\"./co/co-all.geo.json\": [\n\t\t147,\n\t\t57\n\t],\n\t\"./cr/cr-all.geo.json\": [\n\t\t148,\n\t\t58\n\t],\n\t\"./cu/cu-all.geo.json\": [\n\t\t149,\n\t\t59\n\t],\n\t\"./cv/cv-all.geo.json\": [\n\t\t150,\n\t\t60\n\t],\n\t\"./cy/cy-all.geo.json\": [\n\t\t151,\n\t\t61\n\t],\n\t\"./cz/cz-all.geo.json\": [\n\t\t152,\n\t\t62\n\t],\n\t\"./de/de-all-all.geo.json\": [\n\t\t153,\n\t\t63\n\t],\n\t\"./de/de-all.geo.json\": [\n\t\t154,\n\t\t64\n\t],\n\t\"./de/de-bb-all-all.geo.json\": [\n\t\t155,\n\t\t65\n\t],\n\t\"./de/de-bb-all.geo.json\": [\n\t\t156,\n\t\t66\n\t],\n\t\"./de/de-be-all-all.geo.json\": [\n\t\t157,\n\t\t67\n\t],\n\t\"./de/de-be-all.geo.json\": [\n\t\t158,\n\t\t68\n\t],\n\t\"./de/de-bw-all-all.geo.json\": [\n\t\t159,\n\t\t69\n\t],\n\t\"./de/de-bw-all.geo.json\": [\n\t\t160,\n\t\t70\n\t],\n\t\"./de/de-by-all-all.geo.json\": [\n\t\t161,\n\t\t71\n\t],\n\t\"./de/de-by-all.geo.json\": [\n\t\t162,\n\t\t72\n\t],\n\t\"./de/de-hb-all-all.geo.json\": [\n\t\t163,\n\t\t73\n\t],\n\t\"./de/de-hb-all.geo.json\": [\n\t\t164,\n\t\t74\n\t],\n\t\"./de/de-he-all-all.geo.json\": [\n\t\t165,\n\t\t75\n\t],\n\t\"./de/de-he-all.geo.json\": [\n\t\t166,\n\t\t76\n\t],\n\t\"./de/de-hh-all-all.geo.json\": [\n\t\t167,\n\t\t77\n\t],\n\t\"./de/de-hh-all.geo.json\": [\n\t\t168,\n\t\t78\n\t],\n\t\"./de/de-mv-all-all.geo.json\": [\n\t\t169,\n\t\t79\n\t],\n\t\"./de/de-mv-all.geo.json\": [\n\t\t170,\n\t\t80\n\t],\n\t\"./de/de-ni-all-all.geo.json\": [\n\t\t171,\n\t\t81\n\t],\n\t\"./de/de-ni-all.geo.json\": [\n\t\t172,\n\t\t82\n\t],\n\t\"./de/de-nw-all-all.geo.json\": [\n\t\t173,\n\t\t83\n\t],\n\t\"./de/de-nw-all.geo.json\": [\n\t\t174,\n\t\t84\n\t],\n\t\"./de/de-rp-all-all.geo.json\": [\n\t\t175,\n\t\t85\n\t],\n\t\"./de/de-rp-all.geo.json\": [\n\t\t176,\n\t\t86\n\t],\n\t\"./de/de-sh-all-all.geo.json\": [\n\t\t177,\n\t\t87\n\t],\n\t\"./de/de-sh-all.geo.json\": [\n\t\t178,\n\t\t88\n\t],\n\t\"./de/de-sl-all-all.geo.json\": [\n\t\t179,\n\t\t89\n\t],\n\t\"./de/de-sl-all.geo.json\": [\n\t\t180,\n\t\t90\n\t],\n\t\"./de/de-sn-all-all.geo.json\": [\n\t\t181,\n\t\t91\n\t],\n\t\"./de/de-sn-all.geo.json\": [\n\t\t182,\n\t\t92\n\t],\n\t\"./de/de-st-all-all.geo.json\": [\n\t\t183,\n\t\t93\n\t],\n\t\"./de/de-st-all.geo.json\": [\n\t\t184,\n\t\t94\n\t],\n\t\"./de/de-th-all-all.geo.json\": [\n\t\t185,\n\t\t95\n\t],\n\t\"./de/de-th-all.geo.json\": [\n\t\t186,\n\t\t96\n\t],\n\t\"./dj/dj-all.geo.json\": [\n\t\t187,\n\t\t97\n\t],\n\t\"./dk/dk-all.geo.json\": [\n\t\t188,\n\t\t98\n\t],\n\t\"./dm/dm-all.geo.json\": [\n\t\t189,\n\t\t99\n\t],\n\t\"./do/do-all.geo.json\": [\n\t\t190,\n\t\t100\n\t],\n\t\"./dz/dz-all.geo.json\": [\n\t\t191,\n\t\t101\n\t],\n\t\"./ec/ec-all.geo.json\": [\n\t\t192,\n\t\t102\n\t],\n\t\"./ee/ee-all.geo.json\": [\n\t\t193,\n\t\t103\n\t],\n\t\"./eg/eg-all.geo.json\": [\n\t\t194,\n\t\t104\n\t],\n\t\"./eh/eh-all.geo.json\": [\n\t\t195,\n\t\t105\n\t],\n\t\"./er/er-all.geo.json\": [\n\t\t196,\n\t\t106\n\t],\n\t\"./es/es-all.geo.json\": [\n\t\t197,\n\t\t107\n\t],\n\t\"./et/et-all.geo.json\": [\n\t\t198,\n\t\t108\n\t],\n\t\"./fi/fi-all.geo.json\": [\n\t\t199,\n\t\t109\n\t],\n\t\"./fj/fj-all.geo.json\": [\n\t\t200,\n\t\t110\n\t],\n\t\"./fo/fo-all.geo.json\": [\n\t\t201,\n\t\t111\n\t],\n\t\"./fr/fr-all-all.geo.json\": [\n\t\t202,\n\t\t112\n\t],\n\t\"./fr/fr-all.geo.json\": [\n\t\t203,\n\t\t113\n\t],\n\t\"./fr/fr-ara-all.geo.json\": [\n\t\t204,\n\t\t114\n\t],\n\t\"./fr/fr-bfc-all.geo.json\": [\n\t\t205,\n\t\t115\n\t],\n\t\"./fr/fr-bre-all.geo.json\": [\n\t\t206,\n\t\t116\n\t],\n\t\"./fr/fr-cor-all.geo.json\": [\n\t\t207,\n\t\t117\n\t],\n\t\"./fr/fr-cvl-all.geo.json\": [\n\t\t208,\n\t\t118\n\t],\n\t\"./fr/fr-ges-all.geo.json\": [\n\t\t209,\n\t\t119\n\t],\n\t\"./fr/fr-gf-all.geo.json\": [\n\t\t210,\n\t\t120\n\t],\n\t\"./fr/fr-gua-all.geo.json\": [\n\t\t211,\n\t\t121\n\t],\n\t\"./fr/fr-hdf-all.geo.json\": [\n\t\t212,\n\t\t122\n\t],\n\t\"./fr/fr-idf-all.geo.json\": [\n\t\t213,\n\t\t123\n\t],\n\t\"./fr/fr-lre-all.geo.json\": [\n\t\t214,\n\t\t124\n\t],\n\t\"./fr/fr-may-all.geo.json\": [\n\t\t215,\n\t\t125\n\t],\n\t\"./fr/fr-mq-all.geo.json\": [\n\t\t216,\n\t\t126\n\t],\n\t\"./fr/fr-naq-all.geo.json\": [\n\t\t217,\n\t\t127\n\t],\n\t\"./fr/fr-nor-all.geo.json\": [\n\t\t218,\n\t\t128\n\t],\n\t\"./fr/fr-occ-all.geo.json\": [\n\t\t219,\n\t\t129\n\t],\n\t\"./fr/fr-pac-all.geo.json\": [\n\t\t220,\n\t\t130\n\t],\n\t\"./fr/fr-pdl-all.geo.json\": [\n\t\t221,\n\t\t131\n\t],\n\t\"./ga/ga-all.geo.json\": [\n\t\t222,\n\t\t132\n\t],\n\t\"./gb/gb-all.geo.json\": [\n\t\t223,\n\t\t133\n\t],\n\t\"./gd/gd-all.geo.json\": [\n\t\t224,\n\t\t134\n\t],\n\t\"./ge/ge-all.geo.json\": [\n\t\t225,\n\t\t135\n\t],\n\t\"./gh/gh-all.geo.json\": [\n\t\t226,\n\t\t136\n\t],\n\t\"./gl/gl-all.geo.json\": [\n\t\t227,\n\t\t137\n\t],\n\t\"./gm/gm-all.geo.json\": [\n\t\t228,\n\t\t138\n\t],\n\t\"./gn/gn-all.geo.json\": [\n\t\t229,\n\t\t139\n\t],\n\t\"./gq/gq-all.geo.json\": [\n\t\t230,\n\t\t140\n\t],\n\t\"./gr/gr-all.geo.json\": [\n\t\t231,\n\t\t141\n\t],\n\t\"./gt/gt-all.geo.json\": [\n\t\t232,\n\t\t142\n\t],\n\t\"./gu/gu-all.geo.json\": [\n\t\t233,\n\t\t143\n\t],\n\t\"./gw/gw-all.geo.json\": [\n\t\t234,\n\t\t144\n\t],\n\t\"./gy/gy-all.geo.json\": [\n\t\t235,\n\t\t145\n\t],\n\t\"./hn/hn-all.geo.json\": [\n\t\t236,\n\t\t146\n\t],\n\t\"./hr/hr-all.geo.json\": [\n\t\t237,\n\t\t147\n\t],\n\t\"./ht/ht-all.geo.json\": [\n\t\t238,\n\t\t148\n\t],\n\t\"./hu/hu-all.geo.json\": [\n\t\t239,\n\t\t149\n\t],\n\t\"./id/id-all.geo.json\": [\n\t\t240,\n\t\t150\n\t],\n\t\"./ie/ie-all.geo.json\": [\n\t\t241,\n\t\t151\n\t],\n\t\"./il/il-all.geo.json\": [\n\t\t242,\n\t\t152\n\t],\n\t\"./in/in-all.geo.json\": [\n\t\t243,\n\t\t153\n\t],\n\t\"./iq/iq-all.geo.json\": [\n\t\t244,\n\t\t154\n\t],\n\t\"./ir/ir-all.geo.json\": [\n\t\t245,\n\t\t155\n\t],\n\t\"./is/is-all.geo.json\": [\n\t\t246,\n\t\t156\n\t],\n\t\"./it/it-all.geo.json\": [\n\t\t247,\n\t\t157\n\t],\n\t\"./jm/jm-all.geo.json\": [\n\t\t248,\n\t\t158\n\t],\n\t\"./jo/jo-all.geo.json\": [\n\t\t249,\n\t\t159\n\t],\n\t\"./jp/jp-all.geo.json\": [\n\t\t250,\n\t\t160\n\t],\n\t\"./ke/ke-all.geo.json\": [\n\t\t251,\n\t\t161\n\t],\n\t\"./kg/kg-all.geo.json\": [\n\t\t252,\n\t\t162\n\t],\n\t\"./kh/kh-all.geo.json\": [\n\t\t253,\n\t\t163\n\t],\n\t\"./km/km-all.geo.json\": [\n\t\t254,\n\t\t164\n\t],\n\t\"./kn/kn-all.geo.json\": [\n\t\t255,\n\t\t165\n\t],\n\t\"./kp/kp-all.geo.json\": [\n\t\t256,\n\t\t166\n\t],\n\t\"./kr/kr-all.geo.json\": [\n\t\t257,\n\t\t167\n\t],\n\t\"./kv/kv-all.geo.json\": [\n\t\t258,\n\t\t168\n\t],\n\t\"./kw/kw-all.geo.json\": [\n\t\t259,\n\t\t169\n\t],\n\t\"./kz/kz-all.geo.json\": [\n\t\t260,\n\t\t170\n\t],\n\t\"./la/la-all.geo.json\": [\n\t\t261,\n\t\t171\n\t],\n\t\"./lb/lb-all.geo.json\": [\n\t\t262,\n\t\t172\n\t],\n\t\"./lc/lc-all.geo.json\": [\n\t\t263,\n\t\t173\n\t],\n\t\"./li/li-all.geo.json\": [\n\t\t264,\n\t\t174\n\t],\n\t\"./lk/lk-all.geo.json\": [\n\t\t265,\n\t\t175\n\t],\n\t\"./lr/lr-all.geo.json\": [\n\t\t266,\n\t\t176\n\t],\n\t\"./ls/ls-all.geo.json\": [\n\t\t267,\n\t\t177\n\t],\n\t\"./lt/lt-all.geo.json\": [\n\t\t268,\n\t\t178\n\t],\n\t\"./lu/lu-all.geo.json\": [\n\t\t269,\n\t\t179\n\t],\n\t\"./lv/lv-all.geo.json\": [\n\t\t270,\n\t\t180\n\t],\n\t\"./ly/ly-all.geo.json\": [\n\t\t271,\n\t\t181\n\t],\n\t\"./ma/ma-all.geo.json\": [\n\t\t272,\n\t\t182\n\t],\n\t\"./mc/mc-all.geo.json\": [\n\t\t273,\n\t\t183\n\t],\n\t\"./md/md-all.geo.json\": [\n\t\t274,\n\t\t184\n\t],\n\t\"./me/me-all.geo.json\": [\n\t\t275,\n\t\t185\n\t],\n\t\"./mg/mg-all.geo.json\": [\n\t\t276,\n\t\t186\n\t],\n\t\"./mk/mk-all.geo.json\": [\n\t\t277,\n\t\t187\n\t],\n\t\"./ml/ml-all.geo.json\": [\n\t\t278,\n\t\t188\n\t],\n\t\"./mm/mm-all.geo.json\": [\n\t\t279,\n\t\t189\n\t],\n\t\"./mn/mn-all.geo.json\": [\n\t\t280,\n\t\t190\n\t],\n\t\"./mp/mp-all.geo.json\": [\n\t\t281,\n\t\t191\n\t],\n\t\"./mr/mr-all.geo.json\": [\n\t\t282,\n\t\t192\n\t],\n\t\"./mt/mt-all.geo.json\": [\n\t\t283,\n\t\t193\n\t],\n\t\"./mu/mu-all.geo.json\": [\n\t\t284,\n\t\t194\n\t],\n\t\"./mw/mw-all.geo.json\": [\n\t\t285,\n\t\t195\n\t],\n\t\"./mx/mx-all.geo.json\": [\n\t\t286,\n\t\t196\n\t],\n\t\"./my/my-all.geo.json\": [\n\t\t287,\n\t\t197\n\t],\n\t\"./mz/mz-all.geo.json\": [\n\t\t288,\n\t\t198\n\t],\n\t\"./na/na-all.geo.json\": [\n\t\t289,\n\t\t199\n\t],\n\t\"./nc/nc-all.geo.json\": [\n\t\t290,\n\t\t200\n\t],\n\t\"./ne/ne-all.geo.json\": [\n\t\t291,\n\t\t201\n\t],\n\t\"./ng/ng-all.geo.json\": [\n\t\t292,\n\t\t202\n\t],\n\t\"./ni/ni-all.geo.json\": [\n\t\t293,\n\t\t203\n\t],\n\t\"./nl/nl-all-all.geo.json\": [\n\t\t294,\n\t\t204\n\t],\n\t\"./nl/nl-all.geo.json\": [\n\t\t295,\n\t\t205\n\t],\n\t\"./nl/nl-dr-all.geo.json\": [\n\t\t296,\n\t\t206\n\t],\n\t\"./nl/nl-fl-all.geo.json\": [\n\t\t297,\n\t\t207\n\t],\n\t\"./nl/nl-fr-all.geo.json\": [\n\t\t298,\n\t\t208\n\t],\n\t\"./nl/nl-ge-all.geo.json\": [\n\t\t299,\n\t\t209\n\t],\n\t\"./nl/nl-gr-all.geo.json\": [\n\t\t300,\n\t\t210\n\t],\n\t\"./nl/nl-li-all.geo.json\": [\n\t\t301,\n\t\t211\n\t],\n\t\"./nl/nl-nb-all.geo.json\": [\n\t\t302,\n\t\t212\n\t],\n\t\"./nl/nl-nh-all.geo.json\": [\n\t\t303,\n\t\t213\n\t],\n\t\"./nl/nl-ov-all.geo.json\": [\n\t\t304,\n\t\t214\n\t],\n\t\"./nl/nl-ut-all.geo.json\": [\n\t\t305,\n\t\t215\n\t],\n\t\"./nl/nl-ze-all.geo.json\": [\n\t\t306,\n\t\t216\n\t],\n\t\"./nl/nl-zh-all.geo.json\": [\n\t\t307,\n\t\t217\n\t],\n\t\"./no/no-ag-all.geo.json\": [\n\t\t308,\n\t\t218\n\t],\n\t\"./no/no-all-all.geo.json\": [\n\t\t309,\n\t\t219\n\t],\n\t\"./no/no-all.geo.json\": [\n\t\t310,\n\t\t220\n\t],\n\t\"./no/no-in-all.geo.json\": [\n\t\t311,\n\t\t221\n\t],\n\t\"./no/no-mr-all.geo.json\": [\n\t\t312,\n\t\t222\n\t],\n\t\"./no/no-no-all.geo.json\": [\n\t\t313,\n\t\t223\n\t],\n\t\"./no/no-os-all.geo.json\": [\n\t\t314,\n\t\t224\n\t],\n\t\"./no/no-ro-all.geo.json\": [\n\t\t315,\n\t\t225\n\t],\n\t\"./no/no-td-all.geo.json\": [\n\t\t316,\n\t\t226\n\t],\n\t\"./no/no-tf-all.geo.json\": [\n\t\t317,\n\t\t227\n\t],\n\t\"./no/no-vi-all.geo.json\": [\n\t\t318,\n\t\t228\n\t],\n\t\"./no/no-vl-all.geo.json\": [\n\t\t319,\n\t\t229\n\t],\n\t\"./no/no-vt-all.geo.json\": [\n\t\t320,\n\t\t230\n\t],\n\t\"./np/np-all.geo.json\": [\n\t\t321,\n\t\t231\n\t],\n\t\"./nr/nr-all.geo.json\": [\n\t\t322,\n\t\t232\n\t],\n\t\"./nz/nz-all.geo.json\": [\n\t\t323,\n\t\t233\n\t],\n\t\"./om/om-all.geo.json\": [\n\t\t324,\n\t\t234\n\t],\n\t\"./pa/pa-all.geo.json\": [\n\t\t325,\n\t\t235\n\t],\n\t\"./pe/pe-all.geo.json\": [\n\t\t326,\n\t\t236\n\t],\n\t\"./pg/pg-all.geo.json\": [\n\t\t327,\n\t\t237\n\t],\n\t\"./ph/ph-all.geo.json\": [\n\t\t328,\n\t\t238\n\t],\n\t\"./pk/pk-all.geo.json\": [\n\t\t329,\n\t\t239\n\t],\n\t\"./pl/pl-all.geo.json\": [\n\t\t330,\n\t\t240\n\t],\n\t\"./pr/pr-all-all.geo.json\": [\n\t\t331,\n\t\t241\n\t],\n\t\"./pr/pr-all.geo.json\": [\n\t\t332,\n\t\t242\n\t],\n\t\"./pt/pt-all.geo.json\": [\n\t\t333,\n\t\t243\n\t],\n\t\"./pw/pw-all.geo.json\": [\n\t\t334,\n\t\t244\n\t],\n\t\"./py/py-all.geo.json\": [\n\t\t335,\n\t\t245\n\t],\n\t\"./qa/qa-all.geo.json\": [\n\t\t336,\n\t\t246\n\t],\n\t\"./ro/ro-all.geo.json\": [\n\t\t337,\n\t\t247\n\t],\n\t\"./rs/rs-all.geo.json\": [\n\t\t338,\n\t\t248\n\t],\n\t\"./ru/ru-all.geo.json\": [\n\t\t339,\n\t\t249\n\t],\n\t\"./rw/rw-all.geo.json\": [\n\t\t340,\n\t\t250\n\t],\n\t\"./sa/sa-all.geo.json\": [\n\t\t341,\n\t\t251\n\t],\n\t\"./sb/sb-all.geo.json\": [\n\t\t342,\n\t\t252\n\t],\n\t\"./sc/sc-all.geo.json\": [\n\t\t343,\n\t\t253\n\t],\n\t\"./sd/sd-all.geo.json\": [\n\t\t344,\n\t\t254\n\t],\n\t\"./se/se-all.geo.json\": [\n\t\t345,\n\t\t255\n\t],\n\t\"./sg/sg-all.geo.json\": [\n\t\t346,\n\t\t256\n\t],\n\t\"./si/si-all.geo.json\": [\n\t\t347,\n\t\t257\n\t],\n\t\"./sk/sk-all.geo.json\": [\n\t\t348,\n\t\t258\n\t],\n\t\"./sl/sl-all.geo.json\": [\n\t\t349,\n\t\t259\n\t],\n\t\"./sm/sm-all.geo.json\": [\n\t\t350,\n\t\t260\n\t],\n\t\"./sn/sn-all.geo.json\": [\n\t\t351,\n\t\t261\n\t],\n\t\"./so/so-all.geo.json\": [\n\t\t352,\n\t\t262\n\t],\n\t\"./sr/sr-all.geo.json\": [\n\t\t353,\n\t\t263\n\t],\n\t\"./ss/ss-all.geo.json\": [\n\t\t354,\n\t\t264\n\t],\n\t\"./st/st-all.geo.json\": [\n\t\t355,\n\t\t265\n\t],\n\t\"./sv/sv-all.geo.json\": [\n\t\t356,\n\t\t266\n\t],\n\t\"./sx/sx-all.geo.json\": [\n\t\t357,\n\t\t267\n\t],\n\t\"./sy/sy-all.geo.json\": [\n\t\t358,\n\t\t268\n\t],\n\t\"./sz/sz-all.geo.json\": [\n\t\t359,\n\t\t269\n\t],\n\t\"./td/td-all.geo.json\": [\n\t\t360,\n\t\t270\n\t],\n\t\"./tf/tf-all.geo.json\": [\n\t\t361,\n\t\t271\n\t],\n\t\"./tg/tg-all.geo.json\": [\n\t\t362,\n\t\t272\n\t],\n\t\"./th/th-all.geo.json\": [\n\t\t363,\n\t\t273\n\t],\n\t\"./tj/tj-all.geo.json\": [\n\t\t364,\n\t\t274\n\t],\n\t\"./tl/tl-all.geo.json\": [\n\t\t365,\n\t\t275\n\t],\n\t\"./tm/tm-all.geo.json\": [\n\t\t366,\n\t\t276\n\t],\n\t\"./tn/tn-all.geo.json\": [\n\t\t367,\n\t\t277\n\t],\n\t\"./tr/tr-all.geo.json\": [\n\t\t368,\n\t\t278\n\t],\n\t\"./tt/tt-all.geo.json\": [\n\t\t369,\n\t\t279\n\t],\n\t\"./tw/tw-all.geo.json\": [\n\t\t370,\n\t\t280\n\t],\n\t\"./tz/tz-all.geo.json\": [\n\t\t371,\n\t\t281\n\t],\n\t\"./ua/ua-all.geo.json\": [\n\t\t372,\n\t\t282\n\t],\n\t\"./ug/ug-all.geo.json\": [\n\t\t373,\n\t\t283\n\t],\n\t\"./us/us-ak-all.geo.json\": [\n\t\t374,\n\t\t284\n\t],\n\t\"./us/us-al-all.geo.json\": [\n\t\t375,\n\t\t285\n\t],\n\t\"./us/us-all-all.geo.json\": [\n\t\t376,\n\t\t286\n\t],\n\t\"./us/us-all.geo.json\": [\n\t\t377,\n\t\t287\n\t],\n\t\"./us/us-ar-all.geo.json\": [\n\t\t378,\n\t\t288\n\t],\n\t\"./us/us-az-all.geo.json\": [\n\t\t379,\n\t\t289\n\t],\n\t\"./us/us-ca-all.geo.json\": [\n\t\t380,\n\t\t290\n\t],\n\t\"./us/us-co-all.geo.json\": [\n\t\t381,\n\t\t291\n\t],\n\t\"./us/us-ct-all.geo.json\": [\n\t\t382,\n\t\t292\n\t],\n\t\"./us/us-dc-all.geo.json\": [\n\t\t383,\n\t\t293\n\t],\n\t\"./us/us-de-all.geo.json\": [\n\t\t384,\n\t\t294\n\t],\n\t\"./us/us-fl-all.geo.json\": [\n\t\t385,\n\t\t295\n\t],\n\t\"./us/us-ga-all.geo.json\": [\n\t\t386,\n\t\t296\n\t],\n\t\"./us/us-hi-all.geo.json\": [\n\t\t387,\n\t\t297\n\t],\n\t\"./us/us-ia-all.geo.json\": [\n\t\t388,\n\t\t298\n\t],\n\t\"./us/us-id-all.geo.json\": [\n\t\t389,\n\t\t299\n\t],\n\t\"./us/us-il-all.geo.json\": [\n\t\t390,\n\t\t300\n\t],\n\t\"./us/us-in-all.geo.json\": [\n\t\t391,\n\t\t301\n\t],\n\t\"./us/us-ks-all.geo.json\": [\n\t\t392,\n\t\t302\n\t],\n\t\"./us/us-ky-all.geo.json\": [\n\t\t393,\n\t\t303\n\t],\n\t\"./us/us-la-all.geo.json\": [\n\t\t394,\n\t\t304\n\t],\n\t\"./us/us-ma-all.geo.json\": [\n\t\t395,\n\t\t305\n\t],\n\t\"./us/us-md-all.geo.json\": [\n\t\t396,\n\t\t306\n\t],\n\t\"./us/us-me-all.geo.json\": [\n\t\t397,\n\t\t307\n\t],\n\t\"./us/us-mi-all.geo.json\": [\n\t\t398,\n\t\t308\n\t],\n\t\"./us/us-mn-all.geo.json\": [\n\t\t399,\n\t\t309\n\t],\n\t\"./us/us-mo-all.geo.json\": [\n\t\t400,\n\t\t310\n\t],\n\t\"./us/us-ms-all.geo.json\": [\n\t\t401,\n\t\t311\n\t],\n\t\"./us/us-mt-all.geo.json\": [\n\t\t402,\n\t\t312\n\t],\n\t\"./us/us-nc-all.geo.json\": [\n\t\t403,\n\t\t313\n\t],\n\t\"./us/us-nd-all.geo.json\": [\n\t\t404,\n\t\t314\n\t],\n\t\"./us/us-ne-all.geo.json\": [\n\t\t405,\n\t\t315\n\t],\n\t\"./us/us-nh-all.geo.json\": [\n\t\t406,\n\t\t316\n\t],\n\t\"./us/us-nj-all.geo.json\": [\n\t\t407,\n\t\t317\n\t],\n\t\"./us/us-nm-all.geo.json\": [\n\t\t408,\n\t\t318\n\t],\n\t\"./us/us-nv-all.geo.json\": [\n\t\t409,\n\t\t319\n\t],\n\t\"./us/us-ny-all.geo.json\": [\n\t\t410,\n\t\t320\n\t],\n\t\"./us/us-oh-all.geo.json\": [\n\t\t411,\n\t\t321\n\t],\n\t\"./us/us-ok-all.geo.json\": [\n\t\t412,\n\t\t322\n\t],\n\t\"./us/us-or-all.geo.json\": [\n\t\t413,\n\t\t323\n\t],\n\t\"./us/us-pa-all.geo.json\": [\n\t\t414,\n\t\t324\n\t],\n\t\"./us/us-ri-all.geo.json\": [\n\t\t415,\n\t\t325\n\t],\n\t\"./us/us-sc-all.geo.json\": [\n\t\t416,\n\t\t326\n\t],\n\t\"./us/us-sd-all.geo.json\": [\n\t\t417,\n\t\t327\n\t],\n\t\"./us/us-tn-all.geo.json\": [\n\t\t418,\n\t\t328\n\t],\n\t\"./us/us-tx-all.geo.json\": [\n\t\t419,\n\t\t329\n\t],\n\t\"./us/us-ut-all.geo.json\": [\n\t\t420,\n\t\t330\n\t],\n\t\"./us/us-va-all.geo.json\": [\n\t\t421,\n\t\t331\n\t],\n\t\"./us/us-vt-all.geo.json\": [\n\t\t422,\n\t\t332\n\t],\n\t\"./us/us-wa-all.geo.json\": [\n\t\t423,\n\t\t333\n\t],\n\t\"./us/us-wi-all.geo.json\": [\n\t\t424,\n\t\t334\n\t],\n\t\"./us/us-wv-all.geo.json\": [\n\t\t425,\n\t\t335\n\t],\n\t\"./us/us-wy-all.geo.json\": [\n\t\t426,\n\t\t336\n\t],\n\t\"./uy/uy-all.geo.json\": [\n\t\t427,\n\t\t337\n\t],\n\t\"./uz/uz-all.geo.json\": [\n\t\t428,\n\t\t338\n\t],\n\t\"./vc/vc-all.geo.json\": [\n\t\t429,\n\t\t339\n\t],\n\t\"./ve/ve-all.geo.json\": [\n\t\t430,\n\t\t340\n\t],\n\t\"./vi/vi-all.geo.json\": [\n\t\t431,\n\t\t341\n\t],\n\t\"./vn/vn-all.geo.json\": [\n\t\t432,\n\t\t342\n\t],\n\t\"./vu/vu-all.geo.json\": [\n\t\t433,\n\t\t343\n\t],\n\t\"./wf/wf-all.geo.json\": [\n\t\t434,\n\t\t344\n\t],\n\t\"./ws/ws-all.geo.json\": [\n\t\t435,\n\t\t345\n\t],\n\t\"./ye/ye-all.geo.json\": [\n\t\t436,\n\t\t346\n\t],\n\t\"./za/za-all.geo.json\": [\n\t\t437,\n\t\t347\n\t],\n\t\"./zm/zm-all.geo.json\": [\n\t\t438,\n\t\t348\n\t],\n\t\"./zw/zw-all.geo.json\": [\n\t\t439,\n\t\t349\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 83;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: `${theme.spacing(3)}px 0`,\n        minWidth: 120,\n    },\n}));\n\nexport default function CountrySelector({ countries, handleOnChange, value }) {\n    const classes = useStyles();\n\n    return (\n        <FormControl className={classes.formControl}>\n            <InputLabel shrink htmlFor=\"country-selector\">\n                Country\n            </InputLabel>\n            <NativeSelect\n                value={value}\n                onChange={handleOnChange}\n                inputProps={{\n                    name: 'country',\n                    id: 'country-selector',\n                }}\n            >\n                {countries.map(({ Country, ISO2 }) => (\n                    <option key={ISO2} value={ISO2.toLowerCase()}>\n                        {Country}\n                    </option>\n                ))}\n            </NativeSelect>\n            <FormHelperText>Please select country</FormHelperText>\n        </FormControl>\n    );\n}\n\nCountrySelector.defaultProps = {\n    countries: [],\n};\n","import React, { useEffect, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport { red, green, grey } from '@material-ui/core/colors';\n\nconst generateOptions = (data, type, color, name, titleTooltip) => {\n    const categories = data.map((item) => moment(item.Date).format('DD/MM/YYYY'));\n\n    return {\n        chart: {\n            height: 500,\n        },\n        title: {\n            text: `The chart shows the total number of ${name}`,\n        },\n        xAxis: {\n            categories: categories,\n            crosshair: true,\n        },\n        colors: [color],\n        yAxis: {\n            min: 0,\n            title: {\n                text: null,\n            },\n            labels: {\n                align: 'right',\n            },\n        },\n        tooltip: {\n            headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n            pointFormat:\n                '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n                '<td style=\"padding:0\"><b>{point.y} ca</b></td></tr>',\n            footerFormat: '</table>',\n            shared: true,\n            useHTML: true,\n        },\n        plotOptions: {\n            column: {\n                pointPadding: 0.2,\n                borderWidth: 0,\n            },\n        },\n        series: [\n            {\n                name: titleTooltip,\n                data: data,\n            },\n        ],\n    };\n};\n\nexport default function LineChart({ data, type, setType, nameChart, titleTooltip }) {\n    const [options, setOptions] = useState({});\n    const [reportType, setReportType] = useState('all');\n\n    const typeColor = type === 'confirmed' ? red[900] : type === 'recovered' ? green[500] : grey[900];\n\n    useEffect(() => {\n        let customData = [];\n        switch (reportType) {\n            case 'all':\n                customData = data;\n                break;\n            case '30':\n                customData = data.slice(Math.max(data.length - 30, 1));\n                break;\n            case '7':\n                customData = data.slice(Math.max(data.length - 7, 1));\n                break;\n\n            default:\n                customData = data;\n                break;\n        }\n\n        setOptions(generateOptions(customData, type, typeColor, nameChart, titleTooltip));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data, reportType, type, typeColor]);\n\n    return (\n        <>\n            <ButtonGroup\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    marginBottom: 12,\n                }}\n            >\n                <ButtonGroup\n                    size=\"small\"\n                    aria-label=\"small outlined button group\"\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                    }}\n                >\n                    <Button\n                        onClick={() => setType('confirmed')}\n                        style={\n                            type === 'confirmed'\n                                ? {\n                                      color: typeColor,\n                                      border: `1.5px solid ${typeColor}`,\n                                      fontWeight: 600,\n                                  }\n                                : {}\n                        }\n                    >\n                        Tnfections\n                    </Button>\n                    <Button\n                        onClick={() => setType('recovered')}\n                        style={\n                            type === 'recovered'\n                                ? {\n                                      color: typeColor,\n                                      border: `1.5px solid ${typeColor}`,\n                                      fontWeight: 600,\n                                  }\n                                : {}\n                        }\n                    >\n                        Recovered\n                    </Button>\n                    <Button\n                        onClick={() => setType('deaths')}\n                        style={\n                            type === 'deaths'\n                                ? {\n                                      color: typeColor,\n                                      border: `1.5px solid ${typeColor}`,\n                                      fontWeight: 600,\n                                  }\n                                : {}\n                        }\n                    >\n                        Deaths\n                    </Button>\n                </ButtonGroup>\n                <ButtonGroup\n                    size=\"small\"\n                    aria-label=\"small outlined button group\"\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                    }}\n                >\n                    <Button\n                        style={\n                            reportType === 'all'\n                                ? {\n                                      color: typeColor,\n                                      border: `1.5px solid ${typeColor}`,\n                                      fontWeight: 600,\n                                  }\n                                : {}\n                        }\n                        onClick={() => setReportType('all')}\n                    >\n                        ALL\n                    </Button>\n                    <Button\n                        style={\n                            reportType === '30'\n                                ? {\n                                      color: typeColor,\n                                      border: `1.5px solid ${typeColor}`,\n                                      fontWeight: 600,\n                                  }\n                                : {}\n                        }\n                        onClick={() => setReportType('30')}\n                    >\n                        30 day before\n                    </Button>\n                    <Button\n                        style={\n                            reportType === '7'\n                                ? {\n                                      color: typeColor,\n                                      border: `1.5px solid ${typeColor}`,\n                                      fontWeight: 600,\n                                  }\n                                : {}\n                        }\n                        onClick={() => setReportType('7')}\n                    >\n                        7 day before\n                    </Button>\n                </ButtonGroup>\n            </ButtonGroup>\n\n            <HighchartsReact highcharts={Highcharts} options={options} />\n        </>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from 'highcharts/modules/map';\nimport { cloneDeep } from 'lodash';\n\n// Load Highcharts modules\nhighchartsMap(Highcharts);\n\nconst initOptions = (colorMap, titleTooltip) => {\n    return {\n        chart: {\n            height: '500',\n        },\n        title: {\n            text: null,\n        },\n        mapNavigation: {\n            enabled: true,\n        },\n        colorAxis: {\n            min: 0,\n            stops: colorMap,\n        },\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'bottom',\n        },\n        series: [\n            {\n                name: titleTooltip,\n                joinBy: ['hc-key', 'key'],\n            },\n        ],\n    };\n};\n\nconst HighMaps = ({ mapData, colorMap, titleTooltip }) => {\n    const [options, setOptions] = useState({});\n    const [mapLoaded, setMapLoaded] = useState(false);\n    const chartRef = useRef(null);\n\n    useEffect(() => {\n        if (mapData && Object.keys(mapData).length) {\n            const fakeData = mapData.features.map((feature, index) => ({\n                key: feature.properties['hc-key'],\n                value: index,\n            }));\n\n            setOptions(() => ({\n                ...initOptions(colorMap, titleTooltip),\n                title: {\n                    text: mapData.title,\n                },\n                series: [\n                    {\n                        ...initOptions(colorMap, titleTooltip).series[0],\n                        mapData: mapData,\n                        data: fakeData,\n                    },\n                ],\n            }));\n\n            if (!mapLoaded) setMapLoaded(true);\n        }\n    }, [mapData, mapLoaded, colorMap, titleTooltip]);\n\n    useEffect(() => {\n        if (chartRef && chartRef.current) {\n            chartRef.current.chart.series[0].update({\n                mapData,\n            });\n        }\n    }, [options, mapData]);\n\n    if (!mapLoaded) return null;\n\n    return (\n        <HighchartsReact\n            highcharts={Highcharts}\n            options={cloneDeep(options)}\n            constructorType={'mapChart'}\n            ref={chartRef}\n        />\n    );\n};\n\nHighMaps.defaultProps = {\n    mapData: {},\n};\n\nexport default HighMaps;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport { getMapDataByCountryId } from '../apis';\nimport LineChart from '../Charts/LineChart';\nimport HighMaps from '../Charts/HighMaps';\n\nexport default function Summary({ countryId, report }) {\n    const [mapData, setMapData] = useState({});\n\n    useEffect(() => {\n        if (countryId) {\n            getMapDataByCountryId(countryId)\n                .then((res) => {\n                    setMapData(res);\n                })\n                .catch((err) => console.log({ err }));\n        }\n    }, [countryId]);\n    const [type, setType] = useState('confirmed');\n    let listData;\n    let nameChart;\n    let colorMap = [];\n    if (type === 'confirmed') {\n        listData = report.map((item) => item.Confirmed);\n        nameChart = 'covid 19 cases';\n        colorMap = [\n            [0.2, '#FFC4AA'],\n            [0.4, '#FF8A66'],\n            [0.6, '#FF392B'],\n            [0.8, '#B71525'],\n            [1, '\t#7A0826'],\n        ];\n    } else if (type === 'recovered') {\n        listData = report.map((item) => item.Confirmed - item.Deaths);\n        nameChart = 'recovered cases of covid 19';\n        colorMap = [\n            [0.2, '#a5d6a7'],\n            [0.4, '#81c784'],\n            [0.6, '#4caf50'],\n            [0.8, '#388e3c'],\n            [1, '#1b5e20'],\n        ];\n    } else {\n        nameChart = 'deaths due to covid 19';\n        listData = report.map((item) => item.Deaths);\n        colorMap = [\n            [0.2, '#f5f5f5'],\n            [0.4, '#e0e0e0'],\n            [0.6, '#9e9e9e'],\n            [0.8, '#616161'],\n            [1, '#212121'],\n        ];\n    }\n    let titleTooltip = 'Total ' + nameChart;\n    if (report.length > 0) {\n        nameChart = nameChart + ' ' + report[0].Country;\n    }\n    return (\n        <div style={{ height: '500px', marginTop: 10 }}>\n            <Grid container spacing={3}>\n                <Grid item sm={8} xs={12}>\n                    <LineChart\n                        data={listData}\n                        type={type}\n                        setType={setType}\n                        nameChart={nameChart}\n                        titleTooltip={titleTooltip}\n                    />\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <HighMaps mapData={mapData} colorMap={colorMap} titleTooltip={titleTooltip} />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import axios from 'axios';\nimport moment from 'moment';\n\nexport const getCountries = () => axios.get('https://api.covid19api.com/countries');\n\nexport const getReportByCountry = (slug) =>\n    axios.get(\n        `https://api.covid19api.com/dayone/country/${slug}?from=2021-01-01T00:00:00&to=${moment().utc(0).format()}`,\n    );\n\nexport const getMapDataByCountryId = (countryId) =>\n    import(`@highcharts/map-collection/countries/${countryId}/${countryId}-all.geo.json`);\n","import React from 'react';\nimport { CardContent, Typography, Card, makeStyles } from '@material-ui/core';\nimport CountUp from 'react-countup';\n\nconst useStyles = makeStyles({\n    wrapper: (props) => {\n        if (props.type === 'confirmed') return { borderLeft: '5px solid #c9302c' };\n        if (props.type === 'recovered') return { borderLeft: '5px solid #28a745' };\n        else return { borderLeft: '5px solid gray' };\n    },\n    title: { fontSize: 18, marginBottom: 5 },\n    count: { fontWeight: 'bold', fontSize: 18 },\n});\n\nexport default function HighlightCard({ title, count, type }) {\n    const classes = useStyles({ type });\n    return (\n        <Card className={classes.wrapper}>\n            <CardContent>\n                <Typography variant=\"body2\" component=\"p\" className={classes.title}>\n                    {title}\n                </Typography>\n                <Typography variant=\"body2\" component=\"span\" className={classes.count}>\n                    <CountUp end={count} separator=\" \" duration={2} />\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport HighlightCard from './HighlightCard';\n\nexport default function Highlight({ summary }) {\n    return (\n        <Grid container spacing={3}>\n            {summary.map((data, index) => (\n                <Grid item key={index} sm={4} xs={12}>\n                    <HighlightCard title={data.title} count={data.count} type={data.type} />\n                </Grid>\n            ))}\n        </Grid>\n    );\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { sortBy } from 'lodash';\nimport CountrySelector from './components/CountrySelector';\nimport { getCountries, getReportByCountry } from './components/apis';\nimport Summary from './components/Summary';\nimport Highlight from './components/Highlight';\nimport { Container, Typography } from '@material-ui/core';\nimport '@fontsource/roboto';\nimport moment from 'moment';\nimport 'moment/locale/vi';\n\nmoment.locale('en');\nconst App = () => {\n    const [countries, setCountries] = React.useState([]);\n    const [selectedCountryId, setSelectedCountryId] = React.useState('');\n    const [report, setReport] = React.useState([]);\n\n    useEffect(() => {\n        getCountries().then((res) => {\n            const { data } = res;\n            const countries = sortBy(data, 'Country');\n            setCountries(countries);\n            setSelectedCountryId('vn');\n        });\n    }, []);\n\n    const handleOnChange = React.useCallback((e) => {\n        setSelectedCountryId(e.target.value);\n    }, []);\n\n    useEffect(() => {\n        if (selectedCountryId) {\n            const selectedCountry = countries.find((country) => country.ISO2 === selectedCountryId.toUpperCase());\n            getReportByCountry(selectedCountry.Slug).then((res) => {\n                // remove last item = current date\n                res.data.pop();\n                setReport(res.data);\n            });\n        }\n    }, [selectedCountryId, countries]);\n\n    const summary = useMemo(() => {\n        if (report && report.length) {\n            const latestData = report[report.length - 1];\n            return [\n                {\n                    title: 'Total number of covid-19 infections',\n                    count: latestData.Confirmed,\n                    type: 'confirmed',\n                },\n                {\n                    title: 'Total number of covid-19 recovered',\n                    count: latestData.Confirmed - latestData.Deaths,\n                    type: 'recovered',\n                },\n                {\n                    title: 'Total number of  deaths due covid-1',\n                    count: latestData.Deaths,\n                    type: 'death',\n                },\n            ];\n        }\n        return [];\n    }, [report]);\n\n    return (\n        <Container style={{ marginTop: 20 }}>\n            <Typography variant=\"h2\" component=\"h2\">\n                Data of COVID-19\n            </Typography>\n            <Typography>{moment().format('LLL')}</Typography>\n            <CountrySelector handleOnChange={handleOnChange} countries={countries} value={selectedCountryId} />\n            <Highlight summary={summary} />\n            <Summary countryId={selectedCountryId} report={report} />\n        </Container>\n    );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}